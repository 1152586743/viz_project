[
  {
    "objectID": "main.html",
    "href": "main.html",
    "title": "Impact of Climate Change on Tree Canopy Coverage in Southeastern Utah National Parks",
    "section": "",
    "text": "import pandas as pd\ndf = pd.read_csv('Data/NABR_historic.csv')\ndf.head()\n\n\n\n\n\n\n\n\nlong\nlat\nyear\nTimePeriod\nRCP\nscenario\ntreecanopy\nAnn_Herb\nBare\nHerb\n...\nPPT_Annual\nT_Winter\nT_Summer\nT_Annual\nTmax_Summer\nTmin_Winter\nVWC_Winter_whole\nVWC_Spring_whole\nVWC_Summer_whole\nVWC_Fall_whole\n\n\n\n\n0\n-110.0472\n37.60413\n1980\nHist\nhistorical\nsc1\n0\n0\n84\n5\n...\n13.79\n0.964835\n23.15924\n23.159240\n37.05\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\n-110.0472\n37.60413\n1980\nHist\nhistorical\nsc1\n0\n0\n84\n5\n...\n2.69\n0.964835\n23.15924\n0.964835\n37.05\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2\n-110.0472\n37.60413\n1980\nHist\nhistorical\nsc1\n0\n0\n84\n5\n...\n13.79\n0.964835\n23.15924\n0.964835\n37.05\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\n-110.0472\n37.60413\n1980\nHist\nhistorical\nsc1\n0\n0\n84\n5\n...\n2.69\n0.964835\n23.15924\n23.159240\n37.05\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\n-110.0472\n37.60413\n1980\nHist\nhistorical\nsc1\n0\n0\n84\n5\n...\nNaN\nNaN\nNaN\nNaN\nNaN\n-12.45\n0.113447\n0.096831\n0.041876\n0.052298\n\n\n\n\n5 rows × 29 columns\n\n\n\n\ndf2 = pd.read_csv('Data/nearterm_data_2020-2024.csv')\ndf2.head()\n\n\n\n\n\n\n\n\nlong\nlat\nyear\nTimePeriod\nRCP\nscenario\ntreecanopy\nAnn_Herb\nBare\nHerb\n...\nPPT_Annual\nT_Winter\nT_Summer\nT_Annual\nTmax_Summer\nTmin_Winter\nVWC_Winter_whole\nVWC_Spring_whole\nVWC_Summer_whole\nVWC_Fall_whole\n\n\n\n\n0\n-110.0472\n37.60413\n2021\nNT\n4.5\nsc22\n0\n0\n84\n5\n...\n6.37\n1.630333\n24.50402\n24.50402\n36.89\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\n-110.0472\n37.60413\n2021\nNT\n4.5\nsc22\n0\n0\n84\n5\n...\nNaN\nNaN\nNaN\nNaN\nNaN\n-12.77\n0.114652\n0.078764\n0.043514\n0.051281\n\n\n2\n-110.0472\n37.60413\n2021\nNT\n4.5\nsc23\n0\n0\n84\n5\n...\n3.09\n1.389056\n24.11043\n24.11043\n37.95\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\n-110.0472\n37.60413\n2021\nNT\n4.5\nsc23\n0\n0\n84\n5\n...\nNaN\nNaN\nNaN\nNaN\nNaN\n-18.96\n0.130221\n0.096412\n0.041232\n0.092241\n\n\n4\n-110.0472\n37.60413\n2021\nNT\n4.5\nsc24\n0\n0\n84\n5\n...\n6.87\n-0.334389\n25.54266\n10.31321\n37.74\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n5 rows × 29 columns\n\n\n\n\nmerged_df = pd.concat([df, df2], ignore_index=True)\n\nmerged_df = merged_df.loc[:, ~merged_df.columns.duplicated()]\n\nmerged_df.dropna(how='all', inplace=True)\n\n\n# Check for missing values for each column\nmissing_values_per_column = merged_df.isnull().sum()\n\n# Print the number of missing values for each column\nprint(\"\\nNumber of missing values for each column:\")\nprint(missing_values_per_column)\n\n\nNumber of missing values for each column:\nlong                                          0\nlat                                           0\nyear                                          0\nTimePeriod                                    0\nRCP                                           0\nscenario                                      0\ntreecanopy                                    0\nAnn_Herb                                      0\nBare                                          0\nHerb                                          0\nLitter                                        0\nShrub                                         0\nDrySoilDays_Summer_whole                  46874\nEvap_Summer                               46874\nExtremeShortTermDryStress_Summer_whole    46880\nFrostDays_Winter                          46874\nNonDrySWA_Summer_whole                    46998\nPPT_Winter                                22288\nPPT_Summer                                22288\nPPT_Annual                                29693\nT_Winter                                  22288\nT_Summer                                  22288\nT_Annual                                  29693\nTmax_Summer                               22288\nTmin_Winter                               46874\nVWC_Winter_whole                          46874\nVWC_Spring_whole                          46874\nVWC_Summer_whole                          46874\nVWC_Fall_whole                            46874\ndtype: int64\n\n\n\n# Define columns to check for duplicates\ncolumns_to_check = ['long', 'lat', 'year', 'TimePeriod', 'RCP', 'scenario']\n\n# Find duplicates\nduplicates = merged_df[merged_df.duplicated(subset=columns_to_check, keep=False)]\n\n# Display duplicates\nprint(\"Duplicate rows based on the columns:\", columns_to_check)\nprint(duplicates)\n\n# Display unique rows for specific columns\nprint(\"\\nUnique rows count for each column with duplicates:\")\nfor col in merged_df.columns:\n    print(f\"{col}: {duplicates[col].nunique()}\")\n\n# Save duplicates to CSV for further analysis if needed\nduplicates.to_csv('Data/duplicates.csv', index=False)\n\nDuplicate rows based on the columns: ['long', 'lat', 'year', 'TimePeriod', 'RCP', 'scenario']\n           long       lat  year TimePeriod         RCP scenario  treecanopy  \\\n0     -110.0472  37.60413  1980       Hist  historical      sc1           0   \n1     -110.0472  37.60413  1980       Hist  historical      sc1           0   \n2     -110.0472  37.60413  1980       Hist  historical      sc1           0   \n3     -110.0472  37.60413  1980       Hist  historical      sc1           0   \n4     -110.0472  37.60413  1980       Hist  historical      sc1           0   \n...         ...       ...   ...        ...         ...      ...         ...   \n69618 -109.9659  37.62525  2024         NT         8.5     sc57          18   \n69619 -109.9659  37.62525  2024         NT         8.5     sc58          18   \n69620 -109.9659  37.62525  2024         NT         8.5     sc59          18   \n69621 -109.9659  37.62525  2024         NT         8.5     sc60          18   \n69622 -109.9659  37.62525  2024         NT         8.5     sc61          18   \n\n       Ann_Herb  Bare  Herb  ...  PPT_Annual  T_Winter  T_Summer   T_Annual  \\\n0             0    84     5  ...       13.79  0.964835  23.15924  23.159240   \n1             0    84     5  ...        2.69  0.964835  23.15924   0.964835   \n2             0    84     5  ...       13.79  0.964835  23.15924   0.964835   \n3             0    84     5  ...        2.69  0.964835  23.15924  23.159240   \n4             0    84     5  ...         NaN       NaN       NaN        NaN   \n...         ...   ...   ...  ...         ...       ...       ...        ...   \n69618         0    37    18  ...         NaN       NaN       NaN        NaN   \n69619         0    37    18  ...         NaN       NaN       NaN        NaN   \n69620         0    37    18  ...         NaN       NaN       NaN        NaN   \n69621         0    37    18  ...         NaN       NaN       NaN        NaN   \n69622         0    37    18  ...         NaN       NaN       NaN        NaN   \n\n       Tmax_Summer  Tmin_Winter  VWC_Winter_whole  VWC_Spring_whole  \\\n0            37.05          NaN               NaN               NaN   \n1            37.05          NaN               NaN               NaN   \n2            37.05          NaN               NaN               NaN   \n3            37.05          NaN               NaN               NaN   \n4              NaN       -12.45          0.113447          0.096831   \n...            ...          ...               ...               ...   \n69618          NaN       -12.16          0.142255          0.173792   \n69619          NaN       -12.16          0.166254          0.158146   \n69620          NaN       -10.38          0.151342          0.175814   \n69621          NaN       -10.61          0.122249          0.104884   \n69622          NaN        -7.56          0.139110          0.116699   \n\n       VWC_Summer_whole  VWC_Fall_whole  \n0                   NaN             NaN  \n1                   NaN             NaN  \n2                   NaN             NaN  \n3                   NaN             NaN  \n4              0.041876        0.052298  \n...                 ...             ...  \n69618          0.091433        0.106907  \n69619          0.086355        0.095905  \n69620          0.091992        0.109333  \n69621          0.087115        0.118908  \n69622          0.084664        0.111973  \n\n[69485 rows x 29 columns]\n\nUnique rows count for each column with duplicates:\nlong: 92\nlat: 90\nyear: 43\nTimePeriod: 2\nRCP: 3\nscenario: 41\ntreecanopy: 25\nAnn_Herb: 3\nBare: 56\nHerb: 19\nLitter: 24\nShrub: 34\nDrySoilDays_Summer_whole: 93\nEvap_Summer: 22295\nExtremeShortTermDryStress_Summer_whole: 1490\nFrostDays_Winter: 48\nNonDrySWA_Summer_whole: 22069\nPPT_Winter: 783\nPPT_Summer: 798\nPPT_Annual: 1396\nT_Winter: 1152\nT_Summer: 1152\nT_Annual: 3897\nTmax_Summer: 527\nTmin_Winter: 756\nVWC_Winter_whole: 22214\nVWC_Spring_whole: 22267\nVWC_Summer_whole: 22311\nVWC_Fall_whole: 22251\n\n\n\n# Save the cleaned merged dataframe to a new CSV file\nmerged_df.to_csv('Data/merged_cleaned_data.csv', index=False)\n\n\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nyears_to_remove = [2021, 2022, 2023, 2024]\nfiltered_df = merged_df[~merged_df['year'].isin(years_to_remove)]\n\n# For each year, at each unique longitude and latitude, keep the row with the highest treecanopy value\nmax_treecanopy_df = filtered_df.loc[filtered_df.groupby(['year', 'long', 'lat'])['treecanopy'].idxmax()]\n\nunique_years = max_treecanopy_df['year'].unique()\n\n# Create a dropdown menu with the years\nbuttons = []\nfor year in unique_years:\n    filtered_df = merged_df[merged_df['year'] == year]\n    buttons.append(\n        dict(\n            method='update',\n            label=str(year),\n            args=[{'lat': [filtered_df['lat']], \n                   'lon': [filtered_df['long']], \n                   'marker.color': [filtered_df['treecanopy']], \n                   'text': [filtered_df['treecanopy']]}]\n        )\n    )\n\n# Create the initial scatter map plot for the first year in the dataset\ninitial_year = unique_years[0]\ninitial_df = max_treecanopy_df[max_treecanopy_df['year'] == initial_year]\n\nfig = px.scatter_mapbox(\n    initial_df,\n    lat=\"lat\",\n    lon=\"long\",\n    hover_name=\"year\",\n    hover_data=[\"treecanopy\", \"RCP\", \"scenario\"],\n    color=\"treecanopy\",\n    color_continuous_scale=[[0, 'white'], [1, 'red']],\n    size=\"treecanopy\",\n    size_max=15,\n    zoom=11,\n    mapbox_style=\"carto-positron\"\n)\n\n# Update layout for better visibility and add the dropdown menu\nfig.update_layout(\n    title=\"Tree Canopy for\",\n    coloraxis_colorbar=dict(\n        title=\"Tree Canopy Percentage\",\n    ),\n    updatemenus=[dict(\n        buttons=buttons,\n        direction='down',\n        showactive=True,\n        x=0.18,\n        xanchor='left',\n        y=1.2,\n        yanchor='top'\n    )]\n)\n\n# Save the figure as an HTML file\nfig.write_html(\"tree_canopy_map.html\")\n\n\n\n\n# Line chart for tree canopy coverage over time\nfig = px.line(filtered_df, x='year', y='treecanopy', color='scenario', title='Tree Canopy Coverage Over Time')\nfig.write_html(\"tree_canopy_over_time.html\")\n\n\nmerged_df\n\n\n\n\n\n\n\n\nlong\nlat\nyear\nTimePeriod\nRCP\nscenario\ntreecanopy\nAnn_Herb\nBare\nHerb\n...\nPPT_Annual\nT_Winter\nT_Summer\nT_Annual\nTmax_Summer\nTmin_Winter\nVWC_Winter_whole\nVWC_Spring_whole\nVWC_Summer_whole\nVWC_Fall_whole\n\n\n\n\n0\n-110.0472\n37.60413\n1980\nHist\nhistorical\nsc1\n0\n0\n84\n5\n...\n13.79\n0.964835\n23.15924\n23.159240\n37.05\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\n-110.0472\n37.60413\n1980\nHist\nhistorical\nsc1\n0\n0\n84\n5\n...\n2.69\n0.964835\n23.15924\n0.964835\n37.05\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2\n-110.0472\n37.60413\n1980\nHist\nhistorical\nsc1\n0\n0\n84\n5\n...\n13.79\n0.964835\n23.15924\n0.964835\n37.05\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\n-110.0472\n37.60413\n1980\nHist\nhistorical\nsc1\n0\n0\n84\n5\n...\n2.69\n0.964835\n23.15924\n23.159240\n37.05\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\n-110.0472\n37.60413\n1980\nHist\nhistorical\nsc1\n0\n0\n84\n5\n...\nNaN\nNaN\nNaN\nNaN\nNaN\n-12.45\n0.113447\n0.096831\n0.041876\n0.052298\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n69618\n-109.9659\n37.62525\n2024\nNT\n8.5\nsc57\n18\n0\n37\n18\n...\nNaN\nNaN\nNaN\nNaN\nNaN\n-12.16\n0.142255\n0.173792\n0.091433\n0.106907\n\n\n69619\n-109.9659\n37.62525\n2024\nNT\n8.5\nsc58\n18\n0\n37\n18\n...\nNaN\nNaN\nNaN\nNaN\nNaN\n-12.16\n0.166254\n0.158146\n0.086355\n0.095905\n\n\n69620\n-109.9659\n37.62525\n2024\nNT\n8.5\nsc59\n18\n0\n37\n18\n...\nNaN\nNaN\nNaN\nNaN\nNaN\n-10.38\n0.151342\n0.175814\n0.091992\n0.109333\n\n\n69621\n-109.9659\n37.62525\n2024\nNT\n8.5\nsc60\n18\n0\n37\n18\n...\nNaN\nNaN\nNaN\nNaN\nNaN\n-10.61\n0.122249\n0.104884\n0.087115\n0.118908\n\n\n69622\n-109.9659\n37.62525\n2024\nNT\n8.5\nsc61\n18\n0\n37\n18\n...\nNaN\nNaN\nNaN\nNaN\nNaN\n-7.56\n0.139110\n0.116699\n0.084664\n0.111973\n\n\n\n\n69623 rows × 29 columns"
  }
]